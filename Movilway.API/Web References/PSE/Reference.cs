//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Movilway.API.PSE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PSEBinding", Namespace="https://www.enlineapagos.com/secure/webservices")]
    public partial class PSE : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Listar_BancosOperationCompleted;
        
        private System.Threading.SendOrPostCallback Iniciar_PagoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Confirma_Respuesta_PagoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PSE() {
            this.Url = global::Movilway.API.Properties.Settings.Default.Movilway_API_PSE_PSE;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Listar_BancosCompletedEventHandler Listar_BancosCompleted;
        
        /// <remarks/>
        public event Iniciar_PagoCompletedEventHandler Iniciar_PagoCompleted;
        
        /// <remarks/>
        public event Confirma_Respuesta_PagoCompletedEventHandler Confirma_Respuesta_PagoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://www.enlineapagos.com/secure/webservices/WS_PSE.do/Listar_Bancos", RequestNamespace="https://www.enlineapagos.com/secure/webservices", ResponseNamespace="https://www.enlineapagos.com/secure/webservices")]
        [return: System.Xml.Serialization.SoapElementAttribute("respuesta")]
        public string Listar_Bancos(string usuario, string clave, string llavemd5, out string errorsms, out string listabancos) {
            object[] results = this.Invoke("Listar_Bancos", new object[] {
                        usuario,
                        clave,
                        llavemd5});
            errorsms = ((string)(results[1]));
            listabancos = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Listar_BancosAsync(string usuario, string clave, string llavemd5) {
            this.Listar_BancosAsync(usuario, clave, llavemd5, null);
        }
        
        /// <remarks/>
        public void Listar_BancosAsync(string usuario, string clave, string llavemd5, object userState) {
            if ((this.Listar_BancosOperationCompleted == null)) {
                this.Listar_BancosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListar_BancosOperationCompleted);
            }
            this.InvokeAsync("Listar_Bancos", new object[] {
                        usuario,
                        clave,
                        llavemd5}, this.Listar_BancosOperationCompleted, userState);
        }
        
        private void OnListar_BancosOperationCompleted(object arg) {
            if ((this.Listar_BancosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Listar_BancosCompleted(this, new Listar_BancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://www.enlineapagos.com/secure/webservices/WS_PSE.do/Iniciar_Pago", RequestNamespace="https://www.enlineapagos.com/secure/webservices", ResponseNamespace="https://www.enlineapagos.com/secure/webservices")]
        [return: System.Xml.Serialization.SoapElementAttribute("respuesta")]
        public string Iniciar_Pago(
                    string usuario, 
                    string clave, 
                    string llavemd5, 
                    string referencia, 
                    string total_con_iva, 
                    string valor_iva, 
                    string descripcion_pago, 
                    string email, 
                    string Id_cliente, 
                    string nombre_cliente, 
                    string apellido_cliente, 
                    string telefono_cliente, 
                    string direccion, 
                    string pais, 
                    string ciudad, 
                    string ip, 
                    string firma, 
                    string info_opcional1, 
                    string info_opcional2, 
                    string info_opcional3, 
                    string lista_codigos_servicio_multicredito, 
                    string lista_nit_codigos_servicio_multicredito, 
                    string lista_valores_con_iva, 
                    string lista_valores_iva, 
                    string total_codigos_servicio, 
                    string fotografiaurl, 
                    string grabacionurl, 
                    string llamadaconfirmacionnumero, 
                    string facebook, 
                    string urlretorno, 
                    string CodigoDelBanco, 
                    string TipoDeUsuario, 
                    string latitud, 
                    string longitud, 
                    string exactitud, 
                    out string errorsms, 
                    out string url, 
                    out string numerotransaccion) {
            object[] results = this.Invoke("Iniciar_Pago", new object[] {
                        usuario,
                        clave,
                        llavemd5,
                        referencia,
                        total_con_iva,
                        valor_iva,
                        descripcion_pago,
                        email,
                        Id_cliente,
                        nombre_cliente,
                        apellido_cliente,
                        telefono_cliente,
                        direccion,
                        pais,
                        ciudad,
                        ip,
                        firma,
                        info_opcional1,
                        info_opcional2,
                        info_opcional3,
                        lista_codigos_servicio_multicredito,
                        lista_nit_codigos_servicio_multicredito,
                        lista_valores_con_iva,
                        lista_valores_iva,
                        total_codigos_servicio,
                        fotografiaurl,
                        grabacionurl,
                        llamadaconfirmacionnumero,
                        facebook,
                        urlretorno,
                        CodigoDelBanco,
                        TipoDeUsuario,
                        latitud,
                        longitud,
                        exactitud});
            errorsms = ((string)(results[1]));
            url = ((string)(results[2]));
            numerotransaccion = ((string)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Iniciar_PagoAsync(
                    string usuario, 
                    string clave, 
                    string llavemd5, 
                    string referencia, 
                    string total_con_iva, 
                    string valor_iva, 
                    string descripcion_pago, 
                    string email, 
                    string Id_cliente, 
                    string nombre_cliente, 
                    string apellido_cliente, 
                    string telefono_cliente, 
                    string direccion, 
                    string pais, 
                    string ciudad, 
                    string ip, 
                    string firma, 
                    string info_opcional1, 
                    string info_opcional2, 
                    string info_opcional3, 
                    string lista_codigos_servicio_multicredito, 
                    string lista_nit_codigos_servicio_multicredito, 
                    string lista_valores_con_iva, 
                    string lista_valores_iva, 
                    string total_codigos_servicio, 
                    string fotografiaurl, 
                    string grabacionurl, 
                    string llamadaconfirmacionnumero, 
                    string facebook, 
                    string urlretorno, 
                    string CodigoDelBanco, 
                    string TipoDeUsuario, 
                    string latitud, 
                    string longitud, 
                    string exactitud) {
            this.Iniciar_PagoAsync(usuario, clave, llavemd5, referencia, total_con_iva, valor_iva, descripcion_pago, email, Id_cliente, nombre_cliente, apellido_cliente, telefono_cliente, direccion, pais, ciudad, ip, firma, info_opcional1, info_opcional2, info_opcional3, lista_codigos_servicio_multicredito, lista_nit_codigos_servicio_multicredito, lista_valores_con_iva, lista_valores_iva, total_codigos_servicio, fotografiaurl, grabacionurl, llamadaconfirmacionnumero, facebook, urlretorno, CodigoDelBanco, TipoDeUsuario, latitud, longitud, exactitud, null);
        }
        
        /// <remarks/>
        public void Iniciar_PagoAsync(
                    string usuario, 
                    string clave, 
                    string llavemd5, 
                    string referencia, 
                    string total_con_iva, 
                    string valor_iva, 
                    string descripcion_pago, 
                    string email, 
                    string Id_cliente, 
                    string nombre_cliente, 
                    string apellido_cliente, 
                    string telefono_cliente, 
                    string direccion, 
                    string pais, 
                    string ciudad, 
                    string ip, 
                    string firma, 
                    string info_opcional1, 
                    string info_opcional2, 
                    string info_opcional3, 
                    string lista_codigos_servicio_multicredito, 
                    string lista_nit_codigos_servicio_multicredito, 
                    string lista_valores_con_iva, 
                    string lista_valores_iva, 
                    string total_codigos_servicio, 
                    string fotografiaurl, 
                    string grabacionurl, 
                    string llamadaconfirmacionnumero, 
                    string facebook, 
                    string urlretorno, 
                    string CodigoDelBanco, 
                    string TipoDeUsuario, 
                    string latitud, 
                    string longitud, 
                    string exactitud, 
                    object userState) {
            if ((this.Iniciar_PagoOperationCompleted == null)) {
                this.Iniciar_PagoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIniciar_PagoOperationCompleted);
            }
            this.InvokeAsync("Iniciar_Pago", new object[] {
                        usuario,
                        clave,
                        llavemd5,
                        referencia,
                        total_con_iva,
                        valor_iva,
                        descripcion_pago,
                        email,
                        Id_cliente,
                        nombre_cliente,
                        apellido_cliente,
                        telefono_cliente,
                        direccion,
                        pais,
                        ciudad,
                        ip,
                        firma,
                        info_opcional1,
                        info_opcional2,
                        info_opcional3,
                        lista_codigos_servicio_multicredito,
                        lista_nit_codigos_servicio_multicredito,
                        lista_valores_con_iva,
                        lista_valores_iva,
                        total_codigos_servicio,
                        fotografiaurl,
                        grabacionurl,
                        llamadaconfirmacionnumero,
                        facebook,
                        urlretorno,
                        CodigoDelBanco,
                        TipoDeUsuario,
                        latitud,
                        longitud,
                        exactitud}, this.Iniciar_PagoOperationCompleted, userState);
        }
        
        private void OnIniciar_PagoOperationCompleted(object arg) {
            if ((this.Iniciar_PagoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Iniciar_PagoCompleted(this, new Iniciar_PagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("https://www.enlineapagos.com/secure/webservices/WS_PSE.do/Confirma_Respuesta_Pago" +
            "", RequestNamespace="https://www.enlineapagos.com/secure/webservices", ResponseNamespace="https://www.enlineapagos.com/secure/webservices")]
        [return: System.Xml.Serialization.SoapElementAttribute("respuesta")]
        public string Confirma_Respuesta_Pago(
                    string usuario, 
                    string clave, 
                    string llavemd5, 
                    string numerotransaccion, 
                    out string errorsms, 
                    out string int_estado_pago, 
                    out string str_nombre_banco, 
                    out string str_codigo_transaccion, 
                    out string int_ciclo_transaccion, 
                    out string dat_fecha, 
                    out string fechatransaccion, 
                    out string horatransaccion, 
                    out string descripcion_pago, 
                    out string email, 
                    out string nombre_cliente, 
                    out string apellido_cliente, 
                    out string telefono_cliente, 
                    out string direccion, 
                    out string pais, 
                    out string ciudad, 
                    out string info_opcional1, 
                    out string info_opcional2, 
                    out string info_opcional3, 
                    out string firma, 
                    out string ip, 
                    out string total_con_iva, 
                    out string valor_iva) {
            object[] results = this.Invoke("Confirma_Respuesta_Pago", new object[] {
                        usuario,
                        clave,
                        llavemd5,
                        numerotransaccion});
            errorsms = ((string)(results[1]));
            int_estado_pago = ((string)(results[2]));
            str_nombre_banco = ((string)(results[3]));
            str_codigo_transaccion = ((string)(results[4]));
            int_ciclo_transaccion = ((string)(results[5]));
            dat_fecha = ((string)(results[6]));
            fechatransaccion = ((string)(results[7]));
            horatransaccion = ((string)(results[8]));
            descripcion_pago = ((string)(results[9]));
            email = ((string)(results[10]));
            nombre_cliente = ((string)(results[11]));
            apellido_cliente = ((string)(results[12]));
            telefono_cliente = ((string)(results[13]));
            direccion = ((string)(results[14]));
            pais = ((string)(results[15]));
            ciudad = ((string)(results[16]));
            info_opcional1 = ((string)(results[17]));
            info_opcional2 = ((string)(results[18]));
            info_opcional3 = ((string)(results[19]));
            firma = ((string)(results[20]));
            ip = ((string)(results[21]));
            total_con_iva = ((string)(results[22]));
            valor_iva = ((string)(results[23]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Confirma_Respuesta_PagoAsync(string usuario, string clave, string llavemd5, string numerotransaccion) {
            this.Confirma_Respuesta_PagoAsync(usuario, clave, llavemd5, numerotransaccion, null);
        }
        
        /// <remarks/>
        public void Confirma_Respuesta_PagoAsync(string usuario, string clave, string llavemd5, string numerotransaccion, object userState) {
            if ((this.Confirma_Respuesta_PagoOperationCompleted == null)) {
                this.Confirma_Respuesta_PagoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirma_Respuesta_PagoOperationCompleted);
            }
            this.InvokeAsync("Confirma_Respuesta_Pago", new object[] {
                        usuario,
                        clave,
                        llavemd5,
                        numerotransaccion}, this.Confirma_Respuesta_PagoOperationCompleted, userState);
        }
        
        private void OnConfirma_Respuesta_PagoOperationCompleted(object arg) {
            if ((this.Confirma_Respuesta_PagoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Confirma_Respuesta_PagoCompleted(this, new Confirma_Respuesta_PagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void Listar_BancosCompletedEventHandler(object sender, Listar_BancosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Listar_BancosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Listar_BancosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorsms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string listabancos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void Iniciar_PagoCompletedEventHandler(object sender, Iniciar_PagoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Iniciar_PagoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Iniciar_PagoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorsms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string numerotransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void Confirma_Respuesta_PagoCompletedEventHandler(object sender, Confirma_Respuesta_PagoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Confirma_Respuesta_PagoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Confirma_Respuesta_PagoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorsms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string int_estado_pago {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string str_nombre_banco {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string str_codigo_transaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string int_ciclo_transaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string dat_fecha {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string fechatransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string horatransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string descripcion_pago {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string nombre_cliente {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string apellido_cliente {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public string telefono_cliente {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public string direccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[14]));
            }
        }
        
        /// <remarks/>
        public string pais {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[15]));
            }
        }
        
        /// <remarks/>
        public string ciudad {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[16]));
            }
        }
        
        /// <remarks/>
        public string info_opcional1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[17]));
            }
        }
        
        /// <remarks/>
        public string info_opcional2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[18]));
            }
        }
        
        /// <remarks/>
        public string info_opcional3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[19]));
            }
        }
        
        /// <remarks/>
        public string firma {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[20]));
            }
        }
        
        /// <remarks/>
        public string ip {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[21]));
            }
        }
        
        /// <remarks/>
        public string total_con_iva {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[22]));
            }
        }
        
        /// <remarks/>
        public string valor_iva {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[23]));
            }
        }
    }
}

#pragma warning restore 1591