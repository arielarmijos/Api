//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Movilway.API.KinacuManagementWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ManagementInterfaceSoap", Namespace="http://scio-sa.com/webservices/")]
    public partial class ManagementInterface : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRetailerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginWithTerminalOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordByAccessIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrivilegesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ManagementInterface() {
            this.Url = global::Movilway.API.Properties.Settings.Default.Movilway_API_KinacuManagementWebService_ManagementInterface;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetRetailerInfoCompletedEventHandler GetRetailerInfoCompleted;
        
        /// <remarks/>
        public event GetParametersCompletedEventHandler GetParametersCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LoginWithTerminalCompletedEventHandler LoginWithTerminalCompleted;
        
        /// <remarks/>
        public event LoginForChangePasswordCompletedEventHandler LoginForChangePasswordCompleted;
        
        /// <remarks/>
        public event LogOffCompletedEventHandler LogOffCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordByAccessIdCompletedEventHandler ChangeUserPasswordByAccessIdCompleted;
        
        /// <remarks/>
        public event GetPrivilegesCompletedEventHandler GetPrivilegesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetUserInfo", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserInfo(int UserId, out int Id, out string UserName, out string UserLastName, out string UserAddress, out long SessionTimeOut, out string Message) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        UserId});
            Id = ((int)(results[1]));
            UserName = ((string)(results[2]));
            UserLastName = ((string)(results[3]));
            UserAddress = ((string)(results[4]));
            SessionTimeOut = ((long)(results[5]));
            Message = ((string)(results[6]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(int UserId) {
            this.GetUserInfoAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(int UserId, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        UserId}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetRetailerInfo", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetRetailerInfo(int UserId, out int RetailerId, out string RetailerName, out string RetailerAddress, out string RetailerLegalId, out int VoucherQuantityDownload, out string TicketHeader, out string CurrentTime, out string Message) {
            object[] results = this.Invoke("GetRetailerInfo", new object[] {
                        UserId});
            RetailerId = ((int)(results[1]));
            RetailerName = ((string)(results[2]));
            RetailerAddress = ((string)(results[3]));
            RetailerLegalId = ((string)(results[4]));
            VoucherQuantityDownload = ((int)(results[5]));
            TicketHeader = ((string)(results[6]));
            CurrentTime = ((string)(results[7]));
            Message = ((string)(results[8]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetRetailerInfoAsync(int UserId) {
            this.GetRetailerInfoAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetRetailerInfoAsync(int UserId, object userState) {
            if ((this.GetRetailerInfoOperationCompleted == null)) {
                this.GetRetailerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRetailerInfoOperationCompleted);
            }
            this.InvokeAsync("GetRetailerInfo", new object[] {
                        UserId}, this.GetRetailerInfoOperationCompleted, userState);
        }
        
        private void OnGetRetailerInfoOperationCompleted(object arg) {
            if ((this.GetRetailerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRetailerInfoCompleted(this, new GetRetailerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetParameters", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetParameters(int UserId) {
            object[] results = this.Invoke("GetParameters", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetParametersAsync(int UserId) {
            this.GetParametersAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetParametersAsync(int UserId, object userState) {
            if ((this.GetParametersOperationCompleted == null)) {
                this.GetParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParametersOperationCompleted);
            }
            this.InvokeAsync("GetParameters", new object[] {
                        UserId}, this.GetParametersOperationCompleted, userState);
        }
        
        private void OnGetParametersOperationCompleted(object arg) {
            if ((this.GetParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParametersCompleted(this, new GetParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/Login", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Login(string AccessId, string Password, int AccessType, out string Message) {
            object[] results = this.Invoke("Login", new object[] {
                        AccessId,
                        Password,
                        AccessType});
            Message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string AccessId, string Password, int AccessType) {
            this.LoginAsync(AccessId, Password, AccessType, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string AccessId, string Password, int AccessType, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        AccessId,
                        Password,
                        AccessType}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/LoginWithTerminal", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LoginWithTerminal(string AccessId, string Password, int AccessType, string TerminalId, out string Message) {
            object[] results = this.Invoke("LoginWithTerminal", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId});
            Message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginWithTerminalAsync(string AccessId, string Password, int AccessType, string TerminalId) {
            this.LoginWithTerminalAsync(AccessId, Password, AccessType, TerminalId, null);
        }
        
        /// <remarks/>
        public void LoginWithTerminalAsync(string AccessId, string Password, int AccessType, string TerminalId, object userState) {
            if ((this.LoginWithTerminalOperationCompleted == null)) {
                this.LoginWithTerminalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginWithTerminalOperationCompleted);
            }
            this.InvokeAsync("LoginWithTerminal", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId}, this.LoginWithTerminalOperationCompleted, userState);
        }
        
        private void OnLoginWithTerminalOperationCompleted(object arg) {
            if ((this.LoginWithTerminalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginWithTerminalCompleted(this, new LoginWithTerminalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/LoginForChangePassword", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LoginForChangePassword(string AccessId, string Password, int AccessType, string TerminalId, out string Message) {
            object[] results = this.Invoke("LoginForChangePassword", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId});
            Message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForChangePasswordAsync(string AccessId, string Password, int AccessType, string TerminalId) {
            this.LoginForChangePasswordAsync(AccessId, Password, AccessType, TerminalId, null);
        }
        
        /// <remarks/>
        public void LoginForChangePasswordAsync(string AccessId, string Password, int AccessType, string TerminalId, object userState) {
            if ((this.LoginForChangePasswordOperationCompleted == null)) {
                this.LoginForChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForChangePasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForChangePassword", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId}, this.LoginForChangePasswordOperationCompleted, userState);
        }
        
        private void OnLoginForChangePasswordOperationCompleted(object arg) {
            if ((this.LoginForChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForChangePasswordCompleted(this, new LoginForChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/LogOff", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogOff(int UserId) {
            this.Invoke("LogOff", new object[] {
                        UserId});
        }
        
        /// <remarks/>
        public void LogOffAsync(int UserId) {
            this.LogOffAsync(UserId, null);
        }
        
        /// <remarks/>
        public void LogOffAsync(int UserId, object userState) {
            if ((this.LogOffOperationCompleted == null)) {
                this.LogOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOffOperationCompleted);
            }
            this.InvokeAsync("LogOff", new object[] {
                        UserId}, this.LogOffOperationCompleted, userState);
        }
        
        private void OnLogOffOperationCompleted(object arg) {
            if ((this.LogOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/ChangeUserPassword", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserPassword(int UserId, string OldPassword, string NewPassword, out string Message) {
            object[] results = this.Invoke("ChangeUserPassword", new object[] {
                        UserId,
                        OldPassword,
                        NewPassword});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(int UserId, string OldPassword, string NewPassword) {
            this.ChangeUserPasswordAsync(UserId, OldPassword, NewPassword, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(int UserId, string OldPassword, string NewPassword, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        UserId,
                        OldPassword,
                        NewPassword}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new ChangeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/ChangeUserPasswordByAccessId", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserPasswordByAccessId(string AccessId, string OldPassword, string NewPassword, int AccessType, out string Message) {
            object[] results = this.Invoke("ChangeUserPasswordByAccessId", new object[] {
                        AccessId,
                        OldPassword,
                        NewPassword,
                        AccessType});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordByAccessIdAsync(string AccessId, string OldPassword, string NewPassword, int AccessType) {
            this.ChangeUserPasswordByAccessIdAsync(AccessId, OldPassword, NewPassword, AccessType, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordByAccessIdAsync(string AccessId, string OldPassword, string NewPassword, int AccessType, object userState) {
            if ((this.ChangeUserPasswordByAccessIdOperationCompleted == null)) {
                this.ChangeUserPasswordByAccessIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordByAccessIdOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPasswordByAccessId", new object[] {
                        AccessId,
                        OldPassword,
                        NewPassword,
                        AccessType}, this.ChangeUserPasswordByAccessIdOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordByAccessIdOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordByAccessIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordByAccessIdCompleted(this, new ChangeUserPasswordByAccessIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetPrivileges", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPrivileges(int UserId, string Type, out PrivilegeInfo[] Privileges, out string Message) {
            object[] results = this.Invoke("GetPrivileges", new object[] {
                        UserId,
                        Type});
            Privileges = ((PrivilegeInfo[])(results[1]));
            Message = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(int UserId, string Type) {
            this.GetPrivilegesAsync(UserId, Type, null);
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(int UserId, string Type, object userState) {
            if ((this.GetPrivilegesOperationCompleted == null)) {
                this.GetPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetPrivileges", new object[] {
                        UserId,
                        Type}, this.GetPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetPrivilegesOperationCompleted(object arg) {
            if ((this.GetPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrivilegesCompleted(this, new GetPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public partial class PrivilegeInfo {
        
        private decimal idField;
        
        private string nameField;
        
        private string valueField;
        
        private string typeField;
        
        private decimal parentIdField;
        
        /// <remarks/>
        public decimal Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public decimal ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string UserLastName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string UserAddress {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public long SessionTimeOut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRetailerInfoCompletedEventHandler(object sender, GetRetailerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRetailerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRetailerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int RetailerId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RetailerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string RetailerAddress {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string RetailerLegalId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public int VoucherQuantityDownload {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string TicketHeader {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string CurrentTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetParametersCompletedEventHandler(object sender, GetParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginWithTerminalCompletedEventHandler(object sender, LoginWithTerminalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginWithTerminalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginWithTerminalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginForChangePasswordCompletedEventHandler(object sender, LoginForChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogOffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, ChangeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeUserPasswordByAccessIdCompletedEventHandler(object sender, ChangeUserPasswordByAccessIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordByAccessIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordByAccessIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPrivilegesCompletedEventHandler(object sender, GetPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PrivilegeInfo[] Privileges {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PrivilegeInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591