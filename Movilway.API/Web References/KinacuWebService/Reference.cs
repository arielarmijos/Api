//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Movilway.API.KinacuWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SaleInterfaceSoap", Namespace="http://scio-sa.com/webservices/")]
    public partial class SaleInterface : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NewSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewSaleWithExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewSaleWithMethodPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewSaleCheckingExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewSaleDeferredOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnullDiffSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReloadStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaleStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaleStateByExternalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaleCountBySellerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AsynchronousOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback InformPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStockDistributionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentDescendentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateDescendentOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewSaleWithTimeoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProvidersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildRetailersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginWithTerminalOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginForChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordByAccessIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrivilegesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SaleInterface() {
            this.Url = global::Movilway.API.Properties.Settings.Default.Movilway_API_KinacuWebService_SaleInterface;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NewSaleCompletedEventHandler NewSaleCompleted;
        
        /// <remarks/>
        public event NewSaleWithExternalIdCompletedEventHandler NewSaleWithExternalIdCompleted;
        
        /// <remarks/>
        public event NewSaleWithMethodPaymentCompletedEventHandler NewSaleWithMethodPaymentCompleted;
        
        /// <remarks/>
        public event NewSaleCheckingExternalIdCompletedEventHandler NewSaleCheckingExternalIdCompleted;
        
        /// <remarks/>
        public event NewSaleDeferredCompletedEventHandler NewSaleDeferredCompleted;
        
        /// <remarks/>
        public event CommitSaleCompletedEventHandler CommitSaleCompleted;
        
        /// <remarks/>
        public event CancelSaleCompletedEventHandler CancelSaleCompleted;
        
        /// <remarks/>
        public event AnullDiffSaleCompletedEventHandler AnullDiffSaleCompleted;
        
        /// <remarks/>
        public event GetReloadStateCompletedEventHandler GetReloadStateCompleted;
        
        /// <remarks/>
        public event SaleStateCompletedEventHandler SaleStateCompleted;
        
        /// <remarks/>
        public event SaleStateByExternalIdCompletedEventHandler SaleStateByExternalIdCompleted;
        
        /// <remarks/>
        public event SaleCountBySellerCompletedEventHandler SaleCountBySellerCompleted;
        
        /// <remarks/>
        public event AsynchronousOperationCompletedEventHandler AsynchronousOperationCompleted;
        
        /// <remarks/>
        public event GetAccountBankCompletedEventHandler GetAccountBankCompleted;
        
        /// <remarks/>
        public event InformPaymentCompletedEventHandler InformPaymentCompleted;
        
        /// <remarks/>
        public event CreateStockDistributionCompletedEventHandler CreateStockDistributionCompleted;
        
        /// <remarks/>
        public event GetParentDescendentsCompletedEventHandler GetParentDescendentsCompleted;
        
        /// <remarks/>
        public event ValidateDescendentCompletedEventHandler ValidateDescendentCompleted;
        
        /// <remarks/>
        public event NewSaleWithTimeoutCompletedEventHandler NewSaleWithTimeoutCompleted;
        
        /// <remarks/>
        public event GetProductsCompletedEventHandler GetProductsCompleted;
        
        /// <remarks/>
        public event GetAccountBalanceCompletedEventHandler GetAccountBalanceCompleted;
        
        /// <remarks/>
        public event GetProvidersCompletedEventHandler GetProvidersCompleted;
        
        /// <remarks/>
        public event GetChildRetailersCompletedEventHandler GetChildRetailersCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LoginWithTerminalCompletedEventHandler LoginWithTerminalCompleted;
        
        /// <remarks/>
        public event LoginForChangePasswordCompletedEventHandler LoginForChangePasswordCompleted;
        
        /// <remarks/>
        public event LogOffCompletedEventHandler LogOffCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordByAccessIdCompletedEventHandler ChangeUserPasswordByAccessIdCompleted;
        
        /// <remarks/>
        public event GetPrivilegesCompletedEventHandler GetPrivilegesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/NewSale", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewSale(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, out int IdTransaccion, out string SaleData, out string Message) {
            object[] results = this.Invoke("NewSale", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale});
            IdTransaccion = ((int)(results[1]));
            SaleData = ((string)(results[2]));
            Message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewSaleAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale) {
            this.NewSaleAsync(UserId, IdProduct, Customer, Amount, CommitSale, null);
        }
        
        /// <remarks/>
        public void NewSaleAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, object userState) {
            if ((this.NewSaleOperationCompleted == null)) {
                this.NewSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewSaleOperationCompleted);
            }
            this.InvokeAsync("NewSale", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale}, this.NewSaleOperationCompleted, userState);
        }
        
        private void OnNewSaleOperationCompleted(object arg) {
            if ((this.NewSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewSaleCompleted(this, new NewSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/NewSaleWithExternalId", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewSaleWithExternalId(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented, out int IdTransaccion, out string SaleData, out string Message) {
            object[] results = this.Invoke("NewSaleWithExternalId", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale,
                        ExternalId,
                        PdvRepresented});
            IdTransaccion = ((int)(results[1]));
            SaleData = ((string)(results[2]));
            Message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewSaleWithExternalIdAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented) {
            this.NewSaleWithExternalIdAsync(UserId, IdProduct, Customer, Amount, CommitSale, ExternalId, PdvRepresented, null);
        }
        
        /// <remarks/>
        public void NewSaleWithExternalIdAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented, object userState) {
            if ((this.NewSaleWithExternalIdOperationCompleted == null)) {
                this.NewSaleWithExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewSaleWithExternalIdOperationCompleted);
            }
            this.InvokeAsync("NewSaleWithExternalId", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale,
                        ExternalId,
                        PdvRepresented}, this.NewSaleWithExternalIdOperationCompleted, userState);
        }
        
        private void OnNewSaleWithExternalIdOperationCompleted(object arg) {
            if ((this.NewSaleWithExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewSaleWithExternalIdCompleted(this, new NewSaleWithExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/NewSaleWithMethodPayment", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewSaleWithMethodPayment(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented, string MethodPayment, out int IdTransaccion, out string SaleData, out string Message) {
            object[] results = this.Invoke("NewSaleWithMethodPayment", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale,
                        ExternalId,
                        PdvRepresented,
                        MethodPayment});
            IdTransaccion = ((int)(results[1]));
            SaleData = ((string)(results[2]));
            Message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewSaleWithMethodPaymentAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented, string MethodPayment) {
            this.NewSaleWithMethodPaymentAsync(UserId, IdProduct, Customer, Amount, CommitSale, ExternalId, PdvRepresented, MethodPayment, null);
        }
        
        /// <remarks/>
        public void NewSaleWithMethodPaymentAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented, string MethodPayment, object userState) {
            if ((this.NewSaleWithMethodPaymentOperationCompleted == null)) {
                this.NewSaleWithMethodPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewSaleWithMethodPaymentOperationCompleted);
            }
            this.InvokeAsync("NewSaleWithMethodPayment", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale,
                        ExternalId,
                        PdvRepresented,
                        MethodPayment}, this.NewSaleWithMethodPaymentOperationCompleted, userState);
        }
        
        private void OnNewSaleWithMethodPaymentOperationCompleted(object arg) {
            if ((this.NewSaleWithMethodPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewSaleWithMethodPaymentCompleted(this, new NewSaleWithMethodPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/NewSaleCheckingExternalId", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewSaleCheckingExternalId(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented, out int IdTransaccion, out string DataSale, out string Message) {
            object[] results = this.Invoke("NewSaleCheckingExternalId", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale,
                        ExternalId,
                        PdvRepresented});
            IdTransaccion = ((int)(results[1]));
            DataSale = ((string)(results[2]));
            Message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewSaleCheckingExternalIdAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented) {
            this.NewSaleCheckingExternalIdAsync(UserId, IdProduct, Customer, Amount, CommitSale, ExternalId, PdvRepresented, null);
        }
        
        /// <remarks/>
        public void NewSaleCheckingExternalIdAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale, string ExternalId, string PdvRepresented, object userState) {
            if ((this.NewSaleCheckingExternalIdOperationCompleted == null)) {
                this.NewSaleCheckingExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewSaleCheckingExternalIdOperationCompleted);
            }
            this.InvokeAsync("NewSaleCheckingExternalId", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale,
                        ExternalId,
                        PdvRepresented}, this.NewSaleCheckingExternalIdOperationCompleted, userState);
        }
        
        private void OnNewSaleCheckingExternalIdOperationCompleted(object arg) {
            if ((this.NewSaleCheckingExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewSaleCheckingExternalIdCompleted(this, new NewSaleCheckingExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/NewSaleDeferred", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewSaleDeferred(decimal UserId, decimal IdProduct, string Customer, decimal Amount, int DeferredMinutes, string IdTransaccionPos, out decimal IdTransaccion, out string SaleData, out string Message) {
            object[] results = this.Invoke("NewSaleDeferred", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        DeferredMinutes,
                        IdTransaccionPos});
            IdTransaccion = ((decimal)(results[1]));
            SaleData = ((string)(results[2]));
            Message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewSaleDeferredAsync(decimal UserId, decimal IdProduct, string Customer, decimal Amount, int DeferredMinutes, string IdTransaccionPos) {
            this.NewSaleDeferredAsync(UserId, IdProduct, Customer, Amount, DeferredMinutes, IdTransaccionPos, null);
        }
        
        /// <remarks/>
        public void NewSaleDeferredAsync(decimal UserId, decimal IdProduct, string Customer, decimal Amount, int DeferredMinutes, string IdTransaccionPos, object userState) {
            if ((this.NewSaleDeferredOperationCompleted == null)) {
                this.NewSaleDeferredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewSaleDeferredOperationCompleted);
            }
            this.InvokeAsync("NewSaleDeferred", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        DeferredMinutes,
                        IdTransaccionPos}, this.NewSaleDeferredOperationCompleted, userState);
        }
        
        private void OnNewSaleDeferredOperationCompleted(object arg) {
            if ((this.NewSaleDeferredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewSaleDeferredCompleted(this, new NewSaleDeferredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/CommitSale", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CommitSale(int UserId, int IdTransaccion, out string SaleData, out string Message) {
            object[] results = this.Invoke("CommitSale", new object[] {
                        UserId,
                        IdTransaccion});
            SaleData = ((string)(results[1]));
            Message = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CommitSaleAsync(int UserId, int IdTransaccion) {
            this.CommitSaleAsync(UserId, IdTransaccion, null);
        }
        
        /// <remarks/>
        public void CommitSaleAsync(int UserId, int IdTransaccion, object userState) {
            if ((this.CommitSaleOperationCompleted == null)) {
                this.CommitSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitSaleOperationCompleted);
            }
            this.InvokeAsync("CommitSale", new object[] {
                        UserId,
                        IdTransaccion}, this.CommitSaleOperationCompleted, userState);
        }
        
        private void OnCommitSaleOperationCompleted(object arg) {
            if ((this.CommitSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitSaleCompleted(this, new CommitSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/CancelSale", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelSale(int UserId, int IdTransaccion, out string Message) {
            object[] results = this.Invoke("CancelSale", new object[] {
                        UserId,
                        IdTransaccion});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelSaleAsync(int UserId, int IdTransaccion) {
            this.CancelSaleAsync(UserId, IdTransaccion, null);
        }
        
        /// <remarks/>
        public void CancelSaleAsync(int UserId, int IdTransaccion, object userState) {
            if ((this.CancelSaleOperationCompleted == null)) {
                this.CancelSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelSaleOperationCompleted);
            }
            this.InvokeAsync("CancelSale", new object[] {
                        UserId,
                        IdTransaccion}, this.CancelSaleOperationCompleted, userState);
        }
        
        private void OnCancelSaleOperationCompleted(object arg) {
            if ((this.CancelSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelSaleCompleted(this, new CancelSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/AnullDiffSale", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AnullDiffSale(int UserId, int IdTransaction, string IdTransaccionPos, out string Message) {
            object[] results = this.Invoke("AnullDiffSale", new object[] {
                        UserId,
                        IdTransaction,
                        IdTransaccionPos});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AnullDiffSaleAsync(int UserId, int IdTransaction, string IdTransaccionPos) {
            this.AnullDiffSaleAsync(UserId, IdTransaction, IdTransaccionPos, null);
        }
        
        /// <remarks/>
        public void AnullDiffSaleAsync(int UserId, int IdTransaction, string IdTransaccionPos, object userState) {
            if ((this.AnullDiffSaleOperationCompleted == null)) {
                this.AnullDiffSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnullDiffSaleOperationCompleted);
            }
            this.InvokeAsync("AnullDiffSale", new object[] {
                        UserId,
                        IdTransaction,
                        IdTransaccionPos}, this.AnullDiffSaleOperationCompleted, userState);
        }
        
        private void OnAnullDiffSaleOperationCompleted(object arg) {
            if ((this.AnullDiffSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnullDiffSaleCompleted(this, new AnullDiffSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetReloadState", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReloadState(int UserId, int IdTransaccion, string Target, out string Message) {
            object[] results = this.Invoke("GetReloadState", new object[] {
                        UserId,
                        IdTransaccion,
                        Target});
            Message = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReloadStateAsync(int UserId, int IdTransaccion, string Target) {
            this.GetReloadStateAsync(UserId, IdTransaccion, Target, null);
        }
        
        /// <remarks/>
        public void GetReloadStateAsync(int UserId, int IdTransaccion, string Target, object userState) {
            if ((this.GetReloadStateOperationCompleted == null)) {
                this.GetReloadStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReloadStateOperationCompleted);
            }
            this.InvokeAsync("GetReloadState", new object[] {
                        UserId,
                        IdTransaccion,
                        Target}, this.GetReloadStateOperationCompleted, userState);
        }
        
        private void OnGetReloadStateOperationCompleted(object arg) {
            if ((this.GetReloadStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReloadStateCompleted(this, new GetReloadStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/SaleState", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SaleData SaleState(int UserId, int IdTransaccion, string Target, out string Message) {
            object[] results = this.Invoke("SaleState", new object[] {
                        UserId,
                        IdTransaccion,
                        Target});
            Message = ((string)(results[1]));
            return ((SaleData)(results[0]));
        }
        
        /// <remarks/>
        public void SaleStateAsync(int UserId, int IdTransaccion, string Target) {
            this.SaleStateAsync(UserId, IdTransaccion, Target, null);
        }
        
        /// <remarks/>
        public void SaleStateAsync(int UserId, int IdTransaccion, string Target, object userState) {
            if ((this.SaleStateOperationCompleted == null)) {
                this.SaleStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaleStateOperationCompleted);
            }
            this.InvokeAsync("SaleState", new object[] {
                        UserId,
                        IdTransaccion,
                        Target}, this.SaleStateOperationCompleted, userState);
        }
        
        private void OnSaleStateOperationCompleted(object arg) {
            if ((this.SaleStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaleStateCompleted(this, new SaleStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/SaleStateByExternalId", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SaleData SaleStateByExternalId(int UserId, string ExternalId, out string Message) {
            object[] results = this.Invoke("SaleStateByExternalId", new object[] {
                        UserId,
                        ExternalId});
            Message = ((string)(results[1]));
            return ((SaleData)(results[0]));
        }
        
        /// <remarks/>
        public void SaleStateByExternalIdAsync(int UserId, string ExternalId) {
            this.SaleStateByExternalIdAsync(UserId, ExternalId, null);
        }
        
        /// <remarks/>
        public void SaleStateByExternalIdAsync(int UserId, string ExternalId, object userState) {
            if ((this.SaleStateByExternalIdOperationCompleted == null)) {
                this.SaleStateByExternalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaleStateByExternalIdOperationCompleted);
            }
            this.InvokeAsync("SaleStateByExternalId", new object[] {
                        UserId,
                        ExternalId}, this.SaleStateByExternalIdOperationCompleted, userState);
        }
        
        private void OnSaleStateByExternalIdOperationCompleted(object arg) {
            if ((this.SaleStateByExternalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaleStateByExternalIdCompleted(this, new SaleStateByExternalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/SaleCountBySeller", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaleCountBySeller(int UserId, out int Amount, out int Count, out string Message) {
            object[] results = this.Invoke("SaleCountBySeller", new object[] {
                        UserId});
            Amount = ((int)(results[1]));
            Count = ((int)(results[2]));
            Message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaleCountBySellerAsync(int UserId) {
            this.SaleCountBySellerAsync(UserId, null);
        }
        
        /// <remarks/>
        public void SaleCountBySellerAsync(int UserId, object userState) {
            if ((this.SaleCountBySellerOperationCompleted == null)) {
                this.SaleCountBySellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaleCountBySellerOperationCompleted);
            }
            this.InvokeAsync("SaleCountBySeller", new object[] {
                        UserId}, this.SaleCountBySellerOperationCompleted, userState);
        }
        
        private void OnSaleCountBySellerOperationCompleted(object arg) {
            if ((this.SaleCountBySellerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaleCountBySellerCompleted(this, new SaleCountBySellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/AsynchronousOperation", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AsynchronousOperation(int UserId, decimal SaleId, string Comment, AsynchronousOperation Action, out string Message) {
            object[] results = this.Invoke("AsynchronousOperation", new object[] {
                        UserId,
                        SaleId,
                        Comment,
                        Action});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AsynchronousOperationAsync(int UserId, decimal SaleId, string Comment, AsynchronousOperation Action) {
            this.AsynchronousOperationAsync(UserId, SaleId, Comment, Action, null);
        }
        
        /// <remarks/>
        public void AsynchronousOperationAsync(int UserId, decimal SaleId, string Comment, AsynchronousOperation Action, object userState) {
            if ((this.AsynchronousOperationOperationCompleted == null)) {
                this.AsynchronousOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAsynchronousOperationOperationCompleted);
            }
            this.InvokeAsync("AsynchronousOperation", new object[] {
                        UserId,
                        SaleId,
                        Comment,
                        Action}, this.AsynchronousOperationOperationCompleted, userState);
        }
        
        private void OnAsynchronousOperationOperationCompleted(object arg) {
            if ((this.AsynchronousOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AsynchronousOperationCompleted(this, new AsynchronousOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetAccountBank", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BankAccount[] GetAccountBank(int UserId, out string Message) {
            object[] results = this.Invoke("GetAccountBank", new object[] {
                        UserId});
            Message = ((string)(results[1]));
            return ((BankAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountBankAsync(int UserId) {
            this.GetAccountBankAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetAccountBankAsync(int UserId, object userState) {
            if ((this.GetAccountBankOperationCompleted == null)) {
                this.GetAccountBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountBankOperationCompleted);
            }
            this.InvokeAsync("GetAccountBank", new object[] {
                        UserId}, this.GetAccountBankOperationCompleted, userState);
        }
        
        private void OnGetAccountBankOperationCompleted(object arg) {
            if ((this.GetAccountBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountBankCompleted(this, new GetAccountBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/InformPayment", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InformPayment(int UserId, decimal accountNumber, string ticket, System.DateTime paymentDate, decimal amount, string comment, out string Message) {
            object[] results = this.Invoke("InformPayment", new object[] {
                        UserId,
                        accountNumber,
                        ticket,
                        paymentDate,
                        amount,
                        comment});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InformPaymentAsync(int UserId, decimal accountNumber, string ticket, System.DateTime paymentDate, decimal amount, string comment) {
            this.InformPaymentAsync(UserId, accountNumber, ticket, paymentDate, amount, comment, null);
        }
        
        /// <remarks/>
        public void InformPaymentAsync(int UserId, decimal accountNumber, string ticket, System.DateTime paymentDate, decimal amount, string comment, object userState) {
            if ((this.InformPaymentOperationCompleted == null)) {
                this.InformPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInformPaymentOperationCompleted);
            }
            this.InvokeAsync("InformPayment", new object[] {
                        UserId,
                        accountNumber,
                        ticket,
                        paymentDate,
                        amount,
                        comment}, this.InformPaymentOperationCompleted, userState);
        }
        
        private void OnInformPaymentOperationCompleted(object arg) {
            if ((this.InformPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InformPaymentCompleted(this, new InformPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/CreateStockDistribution", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateStockDistribution(int UserId, int retailerIdTO, decimal amount, out string Message) {
            object[] results = this.Invoke("CreateStockDistribution", new object[] {
                        UserId,
                        retailerIdTO,
                        amount});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStockDistributionAsync(int UserId, int retailerIdTO, decimal amount) {
            this.CreateStockDistributionAsync(UserId, retailerIdTO, amount, null);
        }
        
        /// <remarks/>
        public void CreateStockDistributionAsync(int UserId, int retailerIdTO, decimal amount, object userState) {
            if ((this.CreateStockDistributionOperationCompleted == null)) {
                this.CreateStockDistributionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStockDistributionOperationCompleted);
            }
            this.InvokeAsync("CreateStockDistribution", new object[] {
                        UserId,
                        retailerIdTO,
                        amount}, this.CreateStockDistributionOperationCompleted, userState);
        }
        
        private void OnCreateStockDistributionOperationCompleted(object arg) {
            if ((this.CreateStockDistributionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStockDistributionCompleted(this, new CreateStockDistributionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetParentDescendents", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Retailer[] GetParentDescendents(int UserId, int Level) {
            object[] results = this.Invoke("GetParentDescendents", new object[] {
                        UserId,
                        Level});
            return ((Retailer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParentDescendentsAsync(int UserId, int Level) {
            this.GetParentDescendentsAsync(UserId, Level, null);
        }
        
        /// <remarks/>
        public void GetParentDescendentsAsync(int UserId, int Level, object userState) {
            if ((this.GetParentDescendentsOperationCompleted == null)) {
                this.GetParentDescendentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentDescendentsOperationCompleted);
            }
            this.InvokeAsync("GetParentDescendents", new object[] {
                        UserId,
                        Level}, this.GetParentDescendentsOperationCompleted, userState);
        }
        
        private void OnGetParentDescendentsOperationCompleted(object arg) {
            if ((this.GetParentDescendentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentDescendentsCompleted(this, new GetParentDescendentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/ValidateDescendent", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateDescendent(int UserId, int RetailerIdTo) {
            object[] results = this.Invoke("ValidateDescendent", new object[] {
                        UserId,
                        RetailerIdTo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateDescendentAsync(int UserId, int RetailerIdTo) {
            this.ValidateDescendentAsync(UserId, RetailerIdTo, null);
        }
        
        /// <remarks/>
        public void ValidateDescendentAsync(int UserId, int RetailerIdTo, object userState) {
            if ((this.ValidateDescendentOperationCompleted == null)) {
                this.ValidateDescendentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateDescendentOperationCompleted);
            }
            this.InvokeAsync("ValidateDescendent", new object[] {
                        UserId,
                        RetailerIdTo}, this.ValidateDescendentOperationCompleted, userState);
        }
        
        private void OnValidateDescendentOperationCompleted(object arg) {
            if ((this.ValidateDescendentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateDescendentCompleted(this, new ValidateDescendentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/NewSaleWithTimeout", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewSaleWithTimeout(int UserId, int IdProduct, string Customer, int Amount, [System.Xml.Serialization.XmlElementAttribute("CommitSale")] int CommitSale1, int TimeoutSeconds, out int IdTransaccion, out string SaleData, out string Message) {
            object[] results = this.Invoke("NewSaleWithTimeout", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale1,
                        TimeoutSeconds});
            IdTransaccion = ((int)(results[1]));
            SaleData = ((string)(results[2]));
            Message = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewSaleWithTimeoutAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale1, int TimeoutSeconds) {
            this.NewSaleWithTimeoutAsync(UserId, IdProduct, Customer, Amount, CommitSale1, TimeoutSeconds, null);
        }
        
        /// <remarks/>
        public void NewSaleWithTimeoutAsync(int UserId, int IdProduct, string Customer, int Amount, int CommitSale1, int TimeoutSeconds, object userState) {
            if ((this.NewSaleWithTimeoutOperationCompleted == null)) {
                this.NewSaleWithTimeoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewSaleWithTimeoutOperationCompleted);
            }
            this.InvokeAsync("NewSaleWithTimeout", new object[] {
                        UserId,
                        IdProduct,
                        Customer,
                        Amount,
                        CommitSale1,
                        TimeoutSeconds}, this.NewSaleWithTimeoutOperationCompleted, userState);
        }
        
        private void OnNewSaleWithTimeoutOperationCompleted(object arg) {
            if ((this.NewSaleWithTimeoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewSaleWithTimeoutCompleted(this, new NewSaleWithTimeoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetProducts", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] GetProducts(int UserId) {
            object[] results = this.Invoke("GetProducts", new object[] {
                        UserId});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsAsync(int UserId) {
            this.GetProductsAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetProductsAsync(int UserId, object userState) {
            if ((this.GetProductsOperationCompleted == null)) {
                this.GetProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsOperationCompleted);
            }
            this.InvokeAsync("GetProducts", new object[] {
                        UserId}, this.GetProductsOperationCompleted, userState);
        }
        
        private void OnGetProductsOperationCompleted(object arg) {
            if ((this.GetProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetAccountBalance", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetAccountBalance(int UserId, out string Message) {
            object[] results = this.Invoke("GetAccountBalance", new object[] {
                        UserId});
            Message = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountBalanceAsync(int UserId) {
            this.GetAccountBalanceAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetAccountBalanceAsync(int UserId, object userState) {
            if ((this.GetAccountBalanceOperationCompleted == null)) {
                this.GetAccountBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountBalanceOperationCompleted);
            }
            this.InvokeAsync("GetAccountBalance", new object[] {
                        UserId}, this.GetAccountBalanceOperationCompleted, userState);
        }
        
        private void OnGetAccountBalanceOperationCompleted(object arg) {
            if ((this.GetAccountBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountBalanceCompleted(this, new GetAccountBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetProviders", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Provider[] GetProviders(int UserId) {
            object[] results = this.Invoke("GetProviders", new object[] {
                        UserId});
            return ((Provider[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProvidersAsync(int UserId) {
            this.GetProvidersAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetProvidersAsync(int UserId, object userState) {
            if ((this.GetProvidersOperationCompleted == null)) {
                this.GetProvidersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProvidersOperationCompleted);
            }
            this.InvokeAsync("GetProviders", new object[] {
                        UserId}, this.GetProvidersOperationCompleted, userState);
        }
        
        private void OnGetProvidersOperationCompleted(object arg) {
            if ((this.GetProvidersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProvidersCompleted(this, new GetProvidersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetChildRetailers", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Provider[] GetChildRetailers(int UserId) {
            object[] results = this.Invoke("GetChildRetailers", new object[] {
                        UserId});
            return ((Provider[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildRetailersAsync(int UserId) {
            this.GetChildRetailersAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetChildRetailersAsync(int UserId, object userState) {
            if ((this.GetChildRetailersOperationCompleted == null)) {
                this.GetChildRetailersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildRetailersOperationCompleted);
            }
            this.InvokeAsync("GetChildRetailers", new object[] {
                        UserId}, this.GetChildRetailersOperationCompleted, userState);
        }
        
        private void OnGetChildRetailersOperationCompleted(object arg) {
            if ((this.GetChildRetailersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildRetailersCompleted(this, new GetChildRetailersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/Login", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Login(string AccessId, string Password, int AccessType, out string Message) {
            object[] results = this.Invoke("Login", new object[] {
                        AccessId,
                        Password,
                        AccessType});
            Message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string AccessId, string Password, int AccessType) {
            this.LoginAsync(AccessId, Password, AccessType, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string AccessId, string Password, int AccessType, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        AccessId,
                        Password,
                        AccessType}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/LoginWithTerminal", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LoginWithTerminal(string AccessId, string Password, int AccessType, string TerminalId, out string Message) {
            object[] results = this.Invoke("LoginWithTerminal", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId});
            Message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginWithTerminalAsync(string AccessId, string Password, int AccessType, string TerminalId) {
            this.LoginWithTerminalAsync(AccessId, Password, AccessType, TerminalId, null);
        }
        
        /// <remarks/>
        public void LoginWithTerminalAsync(string AccessId, string Password, int AccessType, string TerminalId, object userState) {
            if ((this.LoginWithTerminalOperationCompleted == null)) {
                this.LoginWithTerminalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginWithTerminalOperationCompleted);
            }
            this.InvokeAsync("LoginWithTerminal", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId}, this.LoginWithTerminalOperationCompleted, userState);
        }
        
        private void OnLoginWithTerminalOperationCompleted(object arg) {
            if ((this.LoginWithTerminalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginWithTerminalCompleted(this, new LoginWithTerminalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/LoginForChangePassword", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LoginForChangePassword(string AccessId, string Password, int AccessType, string TerminalId, out string Message) {
            object[] results = this.Invoke("LoginForChangePassword", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId});
            Message = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginForChangePasswordAsync(string AccessId, string Password, int AccessType, string TerminalId) {
            this.LoginForChangePasswordAsync(AccessId, Password, AccessType, TerminalId, null);
        }
        
        /// <remarks/>
        public void LoginForChangePasswordAsync(string AccessId, string Password, int AccessType, string TerminalId, object userState) {
            if ((this.LoginForChangePasswordOperationCompleted == null)) {
                this.LoginForChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginForChangePasswordOperationCompleted);
            }
            this.InvokeAsync("LoginForChangePassword", new object[] {
                        AccessId,
                        Password,
                        AccessType,
                        TerminalId}, this.LoginForChangePasswordOperationCompleted, userState);
        }
        
        private void OnLoginForChangePasswordOperationCompleted(object arg) {
            if ((this.LoginForChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginForChangePasswordCompleted(this, new LoginForChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/LogOff", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogOff(int UserId) {
            this.Invoke("LogOff", new object[] {
                        UserId});
        }
        
        /// <remarks/>
        public void LogOffAsync(int UserId) {
            this.LogOffAsync(UserId, null);
        }
        
        /// <remarks/>
        public void LogOffAsync(int UserId, object userState) {
            if ((this.LogOffOperationCompleted == null)) {
                this.LogOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogOffOperationCompleted);
            }
            this.InvokeAsync("LogOff", new object[] {
                        UserId}, this.LogOffOperationCompleted, userState);
        }
        
        private void OnLogOffOperationCompleted(object arg) {
            if ((this.LogOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogOffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/ChangeUserPassword", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserPassword(int UserId, string OldPassword, string NewPassword, out string Message) {
            object[] results = this.Invoke("ChangeUserPassword", new object[] {
                        UserId,
                        OldPassword,
                        NewPassword});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(int UserId, string OldPassword, string NewPassword) {
            this.ChangeUserPasswordAsync(UserId, OldPassword, NewPassword, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(int UserId, string OldPassword, string NewPassword, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        UserId,
                        OldPassword,
                        NewPassword}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new ChangeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/ChangeUserPasswordByAccessId", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserPasswordByAccessId(string AccessId, string OldPassword, string NewPassword, int AccessType, out string Message) {
            object[] results = this.Invoke("ChangeUserPasswordByAccessId", new object[] {
                        AccessId,
                        OldPassword,
                        NewPassword,
                        AccessType});
            Message = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordByAccessIdAsync(string AccessId, string OldPassword, string NewPassword, int AccessType) {
            this.ChangeUserPasswordByAccessIdAsync(AccessId, OldPassword, NewPassword, AccessType, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordByAccessIdAsync(string AccessId, string OldPassword, string NewPassword, int AccessType, object userState) {
            if ((this.ChangeUserPasswordByAccessIdOperationCompleted == null)) {
                this.ChangeUserPasswordByAccessIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordByAccessIdOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPasswordByAccessId", new object[] {
                        AccessId,
                        OldPassword,
                        NewPassword,
                        AccessType}, this.ChangeUserPasswordByAccessIdOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordByAccessIdOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordByAccessIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordByAccessIdCompleted(this, new ChangeUserPasswordByAccessIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://scio-sa.com/webservices/GetPrivileges", RequestNamespace="http://scio-sa.com/webservices/", ResponseNamespace="http://scio-sa.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPrivileges(int UserId, string Type, out PrivilegeInfo[] Privileges, out string Message) {
            object[] results = this.Invoke("GetPrivileges", new object[] {
                        UserId,
                        Type});
            Privileges = ((PrivilegeInfo[])(results[1]));
            Message = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(int UserId, string Type) {
            this.GetPrivilegesAsync(UserId, Type, null);
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(int UserId, string Type, object userState) {
            if ((this.GetPrivilegesOperationCompleted == null)) {
                this.GetPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetPrivileges", new object[] {
                        UserId,
                        Type}, this.GetPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetPrivilegesOperationCompleted(object arg) {
            if ((this.GetPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrivilegesCompleted(this, new GetPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public partial class SaleData {
        
        private decimal idTransaccionField;
        
        private string customerField;
        
        private int amountField;
        
        private System.DateTime dateField;
        
        private string reloadStateField;
        
        private string reloadStateCodeField;
        
        /// <remarks/>
        public decimal IdTransaccion {
            get {
                return this.idTransaccionField;
            }
            set {
                this.idTransaccionField = value;
            }
        }
        
        /// <remarks/>
        public string Customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        public int Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string ReloadState {
            get {
                return this.reloadStateField;
            }
            set {
                this.reloadStateField = value;
            }
        }
        
        /// <remarks/>
        public string ReloadStateCode {
            get {
                return this.reloadStateCodeField;
            }
            set {
                this.reloadStateCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public partial class PrivilegeInfo {
        
        private decimal idField;
        
        private string nameField;
        
        private string valueField;
        
        private string typeField;
        
        private decimal parentIdField;
        
        private string prodParamField;
        
        /// <remarks/>
        public decimal Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public decimal ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public string ProdParam {
            get {
                return this.prodParamField;
            }
            set {
                this.prodParamField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public partial class Provider {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public partial class Product {
        
        private int idField;
        
        private string nameField;
        
        private int providerIdField;
        
        private int moduleIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
        
        /// <remarks/>
        public int ModuleId {
            get {
                return this.moduleIdField;
            }
            set {
                this.moduleIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public partial class Retailer {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public partial class BankAccount {
        
        private int idField;
        
        private string numberField;
        
        private string cBUField;
        
        private int bankIdField;
        
        private string bankNameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string CBU {
            get {
                return this.cBUField;
            }
            set {
                this.cBUField = value;
            }
        }
        
        /// <remarks/>
        public int BankId {
            get {
                return this.bankIdField;
            }
            set {
                this.bankIdField = value;
            }
        }
        
        /// <remarks/>
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://scio-sa.com/webservices/")]
    public enum AsynchronousOperation {
        
        /// <remarks/>
        Reprocess,
        
        /// <remarks/>
        Revoke,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void NewSaleCompletedEventHandler(object sender, NewSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int IdTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string SaleData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void NewSaleWithExternalIdCompletedEventHandler(object sender, NewSaleWithExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewSaleWithExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewSaleWithExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int IdTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string SaleData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void NewSaleWithMethodPaymentCompletedEventHandler(object sender, NewSaleWithMethodPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewSaleWithMethodPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewSaleWithMethodPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int IdTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string SaleData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void NewSaleCheckingExternalIdCompletedEventHandler(object sender, NewSaleCheckingExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewSaleCheckingExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewSaleCheckingExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int IdTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string DataSale {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void NewSaleDeferredCompletedEventHandler(object sender, NewSaleDeferredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewSaleDeferredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewSaleDeferredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal IdTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string SaleData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitSaleCompletedEventHandler(object sender, CommitSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string SaleData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CancelSaleCompletedEventHandler(object sender, CancelSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void AnullDiffSaleCompletedEventHandler(object sender, AnullDiffSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnullDiffSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnullDiffSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetReloadStateCompletedEventHandler(object sender, GetReloadStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReloadStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReloadStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SaleStateCompletedEventHandler(object sender, SaleStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaleStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaleStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SaleData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SaleData)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SaleStateByExternalIdCompletedEventHandler(object sender, SaleStateByExternalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaleStateByExternalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaleStateByExternalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SaleData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SaleData)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SaleCountBySellerCompletedEventHandler(object sender, SaleCountBySellerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaleCountBySellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaleCountBySellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Amount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void AsynchronousOperationCompletedEventHandler(object sender, AsynchronousOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AsynchronousOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AsynchronousOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAccountBankCompletedEventHandler(object sender, GetAccountBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BankAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BankAccount[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InformPaymentCompletedEventHandler(object sender, InformPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InformPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InformPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CreateStockDistributionCompletedEventHandler(object sender, CreateStockDistributionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStockDistributionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStockDistributionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetParentDescendentsCompletedEventHandler(object sender, GetParentDescendentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentDescendentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentDescendentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Retailer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Retailer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void ValidateDescendentCompletedEventHandler(object sender, ValidateDescendentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateDescendentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateDescendentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void NewSaleWithTimeoutCompletedEventHandler(object sender, NewSaleWithTimeoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewSaleWithTimeoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewSaleWithTimeoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int IdTransaccion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string SaleData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProductsCompletedEventHandler(object sender, GetProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAccountBalanceCompletedEventHandler(object sender, GetAccountBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProvidersCompletedEventHandler(object sender, GetProvidersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProvidersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProvidersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Provider[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Provider[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetChildRetailersCompletedEventHandler(object sender, GetChildRetailersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildRetailersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildRetailersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Provider[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Provider[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void LoginWithTerminalCompletedEventHandler(object sender, LoginWithTerminalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginWithTerminalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginWithTerminalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void LoginForChangePasswordCompletedEventHandler(object sender, LoginForChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginForChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginForChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void LogOffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, ChangeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void ChangeUserPasswordByAccessIdCompletedEventHandler(object sender, ChangeUserPasswordByAccessIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordByAccessIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordByAccessIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetPrivilegesCompletedEventHandler(object sender, GetPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PrivilegeInfo[] Privileges {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PrivilegeInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591