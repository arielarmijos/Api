#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Movilway.API.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BASE")]
	public partial class MovilBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    #endregion
		
		public MovilBaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BASEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MovilBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovilBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovilBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovilBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlatformId;
		
		private int _CountryId;
		
		private int _ProvinceId;
		
		private int _CityId;
		
		private System.DateTime _DateValue;
		
		private int _ProductId;
		
		private int _BranchId;
		
		private System.Nullable<int> _ParentBranchId;
		
		private int _UserId;
		
		private int _AccessTypeId;
		
		private int _ResponseId;
		
		private long _Imei;
		
		private string _StatusId;
		
		private long _PrimaryCode;
		
		private long _SecondaryCode;
		
		private decimal _Amount;
		
		private decimal _DollarAmount;
		
		private decimal _ProfitAmount;
		
		private decimal _DollarProfitAmount;
		
		private string _DestinationNumber;
		
		private string _ExternalCode;
		
		private System.DateTime _TransactionDate;
		
		private int _TimeTaken;
		
		private string _PdvId;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlatformIdChanging(int value);
    partial void OnPlatformIdChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnProvinceIdChanging(int value);
    partial void OnProvinceIdChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnDateValueChanging(System.DateTime value);
    partial void OnDateValueChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnParentBranchIdChanging(System.Nullable<int> value);
    partial void OnParentBranchIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAccessTypeIdChanging(int value);
    partial void OnAccessTypeIdChanged();
    partial void OnResponseIdChanging(int value);
    partial void OnResponseIdChanged();
    partial void OnImeiChanging(long value);
    partial void OnImeiChanged();
    partial void OnStatusIdChanging(string value);
    partial void OnStatusIdChanged();
    partial void OnPrimaryCodeChanging(long value);
    partial void OnPrimaryCodeChanged();
    partial void OnSecondaryCodeChanging(long value);
    partial void OnSecondaryCodeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDollarAmountChanging(decimal value);
    partial void OnDollarAmountChanged();
    partial void OnProfitAmountChanging(decimal value);
    partial void OnProfitAmountChanged();
    partial void OnDollarProfitAmountChanging(decimal value);
    partial void OnDollarProfitAmountChanged();
    partial void OnDestinationNumberChanging(string value);
    partial void OnDestinationNumberChanged();
    partial void OnExternalCodeChanging(string value);
    partial void OnExternalCodeChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTimeTakenChanging(int value);
    partial void OnTimeTakenChanged();
    partial void OnPdvIdChanging(string value);
    partial void OnPdvIdChanged();
    #endregion
		
		public Transaction()
		{
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlatformId
		{
			get
			{
				return this._PlatformId;
			}
			set
			{
				if ((this._PlatformId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlatformIdChanging(value);
					this.SendPropertyChanging();
					this._PlatformId = value;
					this.SendPropertyChanged("PlatformId");
					this.OnPlatformIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceId", DbType="Int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._ProvinceId;
			}
			set
			{
				if ((this._ProvinceId != value))
				{
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._ProvinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateValue", DbType="Date NOT NULL")]
		public System.DateTime DateValue
		{
			get
			{
				return this._DateValue;
			}
			set
			{
				if ((this._DateValue != value))
				{
					this.OnDateValueChanging(value);
					this.SendPropertyChanging();
					this._DateValue = value;
					this.SendPropertyChanged("DateValue");
					this.OnDateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentBranchId", DbType="Int")]
		public System.Nullable<int> ParentBranchId
		{
			get
			{
				return this._ParentBranchId;
			}
			set
			{
				if ((this._ParentBranchId != value))
				{
					this.OnParentBranchIdChanging(value);
					this.SendPropertyChanging();
					this._ParentBranchId = value;
					this.SendPropertyChanged("ParentBranchId");
					this.OnParentBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessTypeId", DbType="Int NOT NULL")]
		public int AccessTypeId
		{
			get
			{
				return this._AccessTypeId;
			}
			set
			{
				if ((this._AccessTypeId != value))
				{
					this.OnAccessTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccessTypeId = value;
					this.SendPropertyChanged("AccessTypeId");
					this.OnAccessTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseId", DbType="Int NOT NULL")]
		public int ResponseId
		{
			get
			{
				return this._ResponseId;
			}
			set
			{
				if ((this._ResponseId != value))
				{
					this.OnResponseIdChanging(value);
					this.SendPropertyChanging();
					this._ResponseId = value;
					this.SendPropertyChanged("ResponseId");
					this.OnResponseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imei", DbType="BigInt NOT NULL")]
		public long Imei
		{
			get
			{
				return this._Imei;
			}
			set
			{
				if ((this._Imei != value))
				{
					this.OnImeiChanging(value);
					this.SendPropertyChanging();
					this._Imei = value;
					this.SendPropertyChanged("Imei");
					this.OnImeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryCode", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long PrimaryCode
		{
			get
			{
				return this._PrimaryCode;
			}
			set
			{
				if ((this._PrimaryCode != value))
				{
					this.OnPrimaryCodeChanging(value);
					this.SendPropertyChanging();
					this._PrimaryCode = value;
					this.SendPropertyChanged("PrimaryCode");
					this.OnPrimaryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryCode", DbType="BigInt NOT NULL")]
		public long SecondaryCode
		{
			get
			{
				return this._SecondaryCode;
			}
			set
			{
				if ((this._SecondaryCode != value))
				{
					this.OnSecondaryCodeChanging(value);
					this.SendPropertyChanging();
					this._SecondaryCode = value;
					this.SendPropertyChanged("SecondaryCode");
					this.OnSecondaryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarAmount", DbType="Money NOT NULL")]
		public decimal DollarAmount
		{
			get
			{
				return this._DollarAmount;
			}
			set
			{
				if ((this._DollarAmount != value))
				{
					this.OnDollarAmountChanging(value);
					this.SendPropertyChanging();
					this._DollarAmount = value;
					this.SendPropertyChanged("DollarAmount");
					this.OnDollarAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitAmount", DbType="Money NOT NULL")]
		public decimal ProfitAmount
		{
			get
			{
				return this._ProfitAmount;
			}
			set
			{
				if ((this._ProfitAmount != value))
				{
					this.OnProfitAmountChanging(value);
					this.SendPropertyChanging();
					this._ProfitAmount = value;
					this.SendPropertyChanged("ProfitAmount");
					this.OnProfitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarProfitAmount", DbType="Money NOT NULL")]
		public decimal DollarProfitAmount
		{
			get
			{
				return this._DollarProfitAmount;
			}
			set
			{
				if ((this._DollarProfitAmount != value))
				{
					this.OnDollarProfitAmountChanging(value);
					this.SendPropertyChanging();
					this._DollarProfitAmount = value;
					this.SendPropertyChanged("DollarProfitAmount");
					this.OnDollarProfitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DestinationNumber
		{
			get
			{
				return this._DestinationNumber;
			}
			set
			{
				if ((this._DestinationNumber != value))
				{
					this.OnDestinationNumberChanging(value);
					this.SendPropertyChanging();
					this._DestinationNumber = value;
					this.SendPropertyChanged("DestinationNumber");
					this.OnDestinationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalCode", DbType="VarChar(50)")]
		public string ExternalCode
		{
			get
			{
				return this._ExternalCode;
			}
			set
			{
				if ((this._ExternalCode != value))
				{
					this.OnExternalCodeChanging(value);
					this.SendPropertyChanging();
					this._ExternalCode = value;
					this.SendPropertyChanged("ExternalCode");
					this.OnExternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTaken", DbType="Int NOT NULL")]
		public int TimeTaken
		{
			get
			{
				return this._TimeTaken;
			}
			set
			{
				if ((this._TimeTaken != value))
				{
					this.OnTimeTakenChanging(value);
					this.SendPropertyChanging();
					this._TimeTaken = value;
					this.SendPropertyChanged("TimeTaken");
					this.OnTimeTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PdvId", DbType="VarChar(50)")]
		public string PdvId
		{
			get
			{
				return this._PdvId;
			}
			set
			{
				if ((this._PdvId != value))
				{
					this.OnPdvIdChanging(value);
					this.SendPropertyChanging();
					this._PdvId = value;
					this.SendPropertyChanged("PdvId");
					this.OnPdvIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Transaction", Storage="_Branch", ThisKey="BranchId,PlatformId,CountryId", OtherKey="BranchId,PlatformId,CountryId", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._BranchId = value.BranchId;
						this._PlatformId = value.PlatformId;
						this._CountryId = value.CountryId;
					}
					else
					{
						this._BranchId = default(int);
						this._PlatformId = default(int);
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranchId;
		
		private int _PlatformId;
		
		private int _CountryId;
		
		private int _ProvinceId;
		
		private int _CityId;
		
		private System.Nullable<int> _ParentBranchId;
		
		private int _UserId;
		
		private string _StatusId;
		
		private string _BranchName;
		
		private string _Address;
		
		private string _LegalName;
		
		private string _LegalNumber;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _CellPhone;
		
		private string _ContactName;
		
		private string _Observations;
		
		private int _SubLevels;
		
		private string _BranchType;
		
		private System.DateTime _DateSignOn;
		
		private System.Nullable<System.DateTime> _DateSignOff;
		
		private string _Pdv;
		
		private string _Imei;
		
		private string _Streets;
		
		private decimal _Stock;
		
		private System.Nullable<System.DateTime> _DateLastPurchase;
		
		private string _Lineage;
		
		private System.Nullable<System.DateTime> _DateLastTransaction;
		
		private System.Nullable<System.DateTime> _DateFirstTransaction;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<Branch> _Branches;
		
		private EntityRef<Branch> _Branch1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnPlatformIdChanging(int value);
    partial void OnPlatformIdChanged();
    partial void OnCountryIdChanging(int value);
    partial void OnCountryIdChanged();
    partial void OnProvinceIdChanging(int value);
    partial void OnProvinceIdChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnParentBranchIdChanging(System.Nullable<int> value);
    partial void OnParentBranchIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnStatusIdChanging(string value);
    partial void OnStatusIdChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnLegalNameChanging(string value);
    partial void OnLegalNameChanged();
    partial void OnLegalNumberChanging(string value);
    partial void OnLegalNumberChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnObservationsChanging(string value);
    partial void OnObservationsChanged();
    partial void OnSubLevelsChanging(int value);
    partial void OnSubLevelsChanged();
    partial void OnBranchTypeChanging(string value);
    partial void OnBranchTypeChanged();
    partial void OnDateSignOnChanging(System.DateTime value);
    partial void OnDateSignOnChanged();
    partial void OnDateSignOffChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSignOffChanged();
    partial void OnPdvChanging(string value);
    partial void OnPdvChanged();
    partial void OnImeiChanging(string value);
    partial void OnImeiChanged();
    partial void OnStreetsChanging(string value);
    partial void OnStreetsChanged();
    partial void OnStockChanging(decimal value);
    partial void OnStockChanged();
    partial void OnDateLastPurchaseChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastPurchaseChanged();
    partial void OnLineageChanging(string value);
    partial void OnLineageChanged();
    partial void OnDateLastTransactionChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastTransactionChanged();
    partial void OnDateFirstTransactionChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFirstTransactionChanged();
    #endregion
		
		public Branch()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Branches = new EntitySet<Branch>(new Action<Branch>(this.attach_Branches), new Action<Branch>(this.detach_Branches));
			this._Branch1 = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlatformId
		{
			get
			{
				return this._PlatformId;
			}
			set
			{
				if ((this._PlatformId != value))
				{
					if (this._Branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlatformIdChanging(value);
					this.SendPropertyChanging();
					this._PlatformId = value;
					this.SendPropertyChanged("PlatformId");
					this.OnPlatformIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceId", DbType="Int NOT NULL")]
		public int ProvinceId
		{
			get
			{
				return this._ProvinceId;
			}
			set
			{
				if ((this._ProvinceId != value))
				{
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._ProvinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentBranchId", DbType="Int")]
		public System.Nullable<int> ParentBranchId
		{
			get
			{
				return this._ParentBranchId;
			}
			set
			{
				if ((this._ParentBranchId != value))
				{
					if (this._Branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentBranchIdChanging(value);
					this.SendPropertyChanging();
					this._ParentBranchId = value;
					this.SendPropertyChanged("ParentBranchId");
					this.OnParentBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LegalName
		{
			get
			{
				return this._LegalName;
			}
			set
			{
				if ((this._LegalName != value))
				{
					this.OnLegalNameChanging(value);
					this.SendPropertyChanging();
					this._LegalName = value;
					this.SendPropertyChanged("LegalName");
					this.OnLegalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LegalNumber
		{
			get
			{
				return this._LegalNumber;
			}
			set
			{
				if ((this._LegalNumber != value))
				{
					this.OnLegalNumberChanging(value);
					this.SendPropertyChanging();
					this._LegalNumber = value;
					this.SendPropertyChanged("LegalNumber");
					this.OnLegalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="VarChar(30)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observations", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Observations
		{
			get
			{
				return this._Observations;
			}
			set
			{
				if ((this._Observations != value))
				{
					this.OnObservationsChanging(value);
					this.SendPropertyChanging();
					this._Observations = value;
					this.SendPropertyChanged("Observations");
					this.OnObservationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubLevels", DbType="Int NOT NULL")]
		public int SubLevels
		{
			get
			{
				return this._SubLevels;
			}
			set
			{
				if ((this._SubLevels != value))
				{
					this.OnSubLevelsChanging(value);
					this.SendPropertyChanging();
					this._SubLevels = value;
					this.SendPropertyChanged("SubLevels");
					this.OnSubLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string BranchType
		{
			get
			{
				return this._BranchType;
			}
			set
			{
				if ((this._BranchType != value))
				{
					this.OnBranchTypeChanging(value);
					this.SendPropertyChanging();
					this._BranchType = value;
					this.SendPropertyChanged("BranchType");
					this.OnBranchTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSignOn", DbType="DateTime NOT NULL")]
		public System.DateTime DateSignOn
		{
			get
			{
				return this._DateSignOn;
			}
			set
			{
				if ((this._DateSignOn != value))
				{
					this.OnDateSignOnChanging(value);
					this.SendPropertyChanging();
					this._DateSignOn = value;
					this.SendPropertyChanged("DateSignOn");
					this.OnDateSignOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSignOff", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSignOff
		{
			get
			{
				return this._DateSignOff;
			}
			set
			{
				if ((this._DateSignOff != value))
				{
					this.OnDateSignOffChanging(value);
					this.SendPropertyChanging();
					this._DateSignOff = value;
					this.SendPropertyChanged("DateSignOff");
					this.OnDateSignOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdv", DbType="VarChar(50)")]
		public string Pdv
		{
			get
			{
				return this._Pdv;
			}
			set
			{
				if ((this._Pdv != value))
				{
					this.OnPdvChanging(value);
					this.SendPropertyChanging();
					this._Pdv = value;
					this.SendPropertyChanged("Pdv");
					this.OnPdvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imei", DbType="VarChar(20)")]
		public string Imei
		{
			get
			{
				return this._Imei;
			}
			set
			{
				if ((this._Imei != value))
				{
					this.OnImeiChanging(value);
					this.SendPropertyChanging();
					this._Imei = value;
					this.SendPropertyChanged("Imei");
					this.OnImeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Streets", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Streets
		{
			get
			{
				return this._Streets;
			}
			set
			{
				if ((this._Streets != value))
				{
					this.OnStreetsChanging(value);
					this.SendPropertyChanging();
					this._Streets = value;
					this.SendPropertyChanged("Streets");
					this.OnStreetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Decimal(14,4) NOT NULL")]
		public decimal Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastPurchase", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastPurchase
		{
			get
			{
				return this._DateLastPurchase;
			}
			set
			{
				if ((this._DateLastPurchase != value))
				{
					this.OnDateLastPurchaseChanging(value);
					this.SendPropertyChanging();
					this._DateLastPurchase = value;
					this.SendPropertyChanged("DateLastPurchase");
					this.OnDateLastPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lineage", DbType="VarChar(MAX)")]
		public string Lineage
		{
			get
			{
				return this._Lineage;
			}
			set
			{
				if ((this._Lineage != value))
				{
					this.OnLineageChanging(value);
					this.SendPropertyChanging();
					this._Lineage = value;
					this.SendPropertyChanged("Lineage");
					this.OnLineageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastTransaction", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastTransaction
		{
			get
			{
				return this._DateLastTransaction;
			}
			set
			{
				if ((this._DateLastTransaction != value))
				{
					this.OnDateLastTransactionChanging(value);
					this.SendPropertyChanging();
					this._DateLastTransaction = value;
					this.SendPropertyChanged("DateLastTransaction");
					this.OnDateLastTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFirstTransaction", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFirstTransaction
		{
			get
			{
				return this._DateFirstTransaction;
			}
			set
			{
				if ((this._DateFirstTransaction != value))
				{
					this.OnDateFirstTransactionChanging(value);
					this.SendPropertyChanging();
					this._DateFirstTransaction = value;
					this.SendPropertyChanged("DateFirstTransaction");
					this.OnDateFirstTransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Transaction", Storage="_Transactions", ThisKey="BranchId,PlatformId,CountryId", OtherKey="BranchId,PlatformId,CountryId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Branch", Storage="_Branches", ThisKey="BranchId,PlatformId,CountryId", OtherKey="ParentBranchId,PlatformId,CountryId")]
		public EntitySet<Branch> Branches
		{
			get
			{
				return this._Branches;
			}
			set
			{
				this._Branches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Branch", Storage="_Branch1", ThisKey="ParentBranchId,PlatformId,CountryId", OtherKey="BranchId,PlatformId,CountryId", IsForeignKey=true)]
		public Branch Branch1
		{
			get
			{
				return this._Branch1.Entity;
			}
			set
			{
				Branch previousValue = this._Branch1.Entity;
				if (((previousValue != value) 
							|| (this._Branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch1.Entity = null;
						previousValue.Branches.Remove(this);
					}
					this._Branch1.Entity = value;
					if ((value != null))
					{
						value.Branches.Add(this);
						this._ParentBranchId = value.BranchId;
						this._PlatformId = value.PlatformId;
						this._CountryId = value.CountryId;
					}
					else
					{
						this._ParentBranchId = default(Nullable<int>);
						this._PlatformId = default(int);
						this._CountryId = default(int);
					}
					this.SendPropertyChanged("Branch1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = this;
		}
		
		private void detach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = null;
		}
	}
}
#pragma warning restore 1591
