#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Movilway.API.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MwayAPI")]
	public partial class MwayAPIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTransactionLog(TransactionLog instance);
    partial void UpdateTransactionLog(TransactionLog instance);
    partial void DeleteTransactionLog(TransactionLog instance);
    #endregion
		
		public MwayAPIDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MwayAPIConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MwayAPIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MwayAPIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MwayAPIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MwayAPIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TransactionLog> TransactionLogs
		{
			get
			{
				return this.GetTable<TransactionLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionLog")]
	public partial class TransactionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TransactionID;
		
		private string _Username;
		
		private string _ExternalTransactionReference;
		
		private string _TransactionType;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _Fee;
		
		private bool _Completed;
		
		private System.Nullable<int> _ResponseCode;
		
		private System.Nullable<long> _UtibaTransactionID;
		
		private string _ResponseMessage;
		
		private System.DateTime _DateTimeBegin;
		
		private System.Nullable<System.DateTime> _DateTimeEnd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(long value);
    partial void OnTransactionIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnExternalTransactionReferenceChanging(string value);
    partial void OnExternalTransactionReferenceChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnFeeChanging(System.Nullable<decimal> value);
    partial void OnFeeChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnResponseCodeChanging(System.Nullable<int> value);
    partial void OnResponseCodeChanged();
    partial void OnUtibaTransactionIDChanging(System.Nullable<long> value);
    partial void OnUtibaTransactionIDChanged();
    partial void OnResponseMessageChanging(string value);
    partial void OnResponseMessageChanged();
    partial void OnDateTimeBeginChanging(System.DateTime value);
    partial void OnDateTimeBeginChanged();
    partial void OnDateTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeEndChanged();
    #endregion
		
		public TransactionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalTransactionReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExternalTransactionReference
		{
			get
			{
				return this._ExternalTransactionReference;
			}
			set
			{
				if ((this._ExternalTransactionReference != value))
				{
					this.OnExternalTransactionReferenceChanging(value);
					this.SendPropertyChanging();
					this._ExternalTransactionReference = value;
					this.SendPropertyChanged("ExternalTransactionReference");
					this.OnExternalTransactionReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fee", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Fee
		{
			get
			{
				return this._Fee;
			}
			set
			{
				if ((this._Fee != value))
				{
					this.OnFeeChanging(value);
					this.SendPropertyChanging();
					this._Fee = value;
					this.SendPropertyChanged("Fee");
					this.OnFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="Int")]
		public System.Nullable<int> ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this.OnResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseCode = value;
					this.SendPropertyChanged("ResponseCode");
					this.OnResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtibaTransactionID", DbType="BigInt")]
		public System.Nullable<long> UtibaTransactionID
		{
			get
			{
				return this._UtibaTransactionID;
			}
			set
			{
				if ((this._UtibaTransactionID != value))
				{
					this.OnUtibaTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._UtibaTransactionID = value;
					this.SendPropertyChanged("UtibaTransactionID");
					this.OnUtibaTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseMessage", DbType="VarChar(160)")]
		public string ResponseMessage
		{
			get
			{
				return this._ResponseMessage;
			}
			set
			{
				if ((this._ResponseMessage != value))
				{
					this.OnResponseMessageChanging(value);
					this.SendPropertyChanging();
					this._ResponseMessage = value;
					this.SendPropertyChanged("ResponseMessage");
					this.OnResponseMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeBegin
		{
			get
			{
				return this._DateTimeBegin;
			}
			set
			{
				if ((this._DateTimeBegin != value))
				{
					this.OnDateTimeBeginChanging(value);
					this.SendPropertyChanging();
					this._DateTimeBegin = value;
					this.SendPropertyChanged("DateTimeBegin");
					this.OnDateTimeBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeEnd
		{
			get
			{
				return this._DateTimeEnd;
			}
			set
			{
				if ((this._DateTimeEnd != value))
				{
					this.OnDateTimeEndChanging(value);
					this.SendPropertyChanging();
					this._DateTimeEnd = value;
					this.SendPropertyChanged("DateTimeEnd");
					this.OnDateTimeEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
